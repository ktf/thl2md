#!/usr/bin/env python

from appscript import app
from optparse import OptionParser
from sys import exit

class TheHitListApp (object):
  def __init__ (self):
    self.__app = app('The Hit List')
    self.__people = ["/" + tag.name.get() for tag in self.__app.tags_group.groups["PEOPLE"].tags.get ()]

  def getFolderByName (self, name):
    group = self.__app.folders_group
  
    for name in name.split ("/"):
      newGroup = group.groups[name]

      try:
        newGroup.get()
      except:
        print "Could not find %s. Candidates are:" % (name)
        for x in group.groups.get ():
          print "* '%s'" % x.name.get ()
        exit(1)
      group = newGroup
    return group
  
  def dumpTask (self, task, depth = 0):
    indent = " ".join(["" for x in xrange(depth)])
    print indent + "* " + task.title.get ()
    note = task.notes.get ()
    if note:
      print
      for l in note.split("\n"):
        print indent + "  " + note
      print
    for childTask in task.tasks.get():
      self.dumpTask (childTask, depth + 3)
  
  def dump (self, folder):
    try:
      tasks = folder.tasks.get()
    except:
      print "No tasks in folder. Maybe you want to try for one of its lists:"
      for x in folder.groups.get ():
        print "* '%s'" % x.name.get ()
      exit(1)
      
    for task in folder.tasks.get():
      self.dumpTask (task)
  
if __name__ == "__main__":
  hl = TheHitListApp()
  parser = OptionParser ()
  opts, args = parser.parse_args ()
  args = args or ["<no folder specified>"]
  
  
  for name in args:
    folder = hl.getFolderByName (name)
    print "# " + folder.name.get ()
    print
    hl.dump (folder)